# Python_Hub_Studio
# Python_7_Hours

# Лямбда функции. Анонимные функции. Лямбда выражения. lambda

string = "Hi"

# обыкновенная функция имеет имя. paranetr x
def some(x):
    return x*5

# запуск обыкновенной функции и вывод результата
print(some(string))

# лямбда функция не имеет имени. paranetr x
# в лямбда функциях "return" прописывать не нужно, он там находится по умолчанию
lambda x: string*5

# чтобы вывести на экран результат люмбда функции, его нужно присвоить переменной
tmp = lambda x: string*5
print(tmp(string)) # переменная 'tmp' запускается как функция, которая принимает аргумент 'string'


# 1. Применение функции lambda. СОРТИРОВКА ДАННЫХ.

# список some_list, нужно отсортировать по возрасту
some_list = [["Adam", 29], ["Jonny", 3*1/12], ["Jess", 25]]

# использование обыкновенной функции
def s(x):
    '''Сортировка будет по идексу x[1]'''
    return x[1]

r1 = sorted(some_list, key=s)
print(r1) # OUT: [['Jonny', 0.25], ['Jess', 25], ['Adam', 29]]

# сортировка с использованием функции lambda
r2 = sorted(some_list, key=lambda x: x[1])
print(r2) # OUT: [['Jonny', 0.25], ['Jess', 25], ['Adam', 29]]


# 2. Применение функции lambda. ФИЛЬТР

# список some_list, нужно отфильтровать по условию "возраст больше 18"
some_list = [["Adam", 29], ["Jonny", 3*1/12], ["Jess", 25]]

# Функция фильтр используется для создания нового списка, исключив какие-либо значения
# т.к. filter() - это объект, создаем из него список при помощи функции list()
r3 = list(filter(lambda x: x[1] > 18, some_list))
print(r3) # OUT: [['Adam', 29], ['Jess', 25]]
