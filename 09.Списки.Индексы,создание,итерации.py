# Python_Hub_Studio
# Python_7_Hours

# СПИСКИ.
# !!! СПИСКИ ОТНОСЯТСЯ К ИЗМЕНЯЕМЫМ ТИПАМ ДАННЫХ!!!

some_list = []
print(type(some_list)) # OUT: <class 'list'>

some_list = [1, 2, 1, 3, 2, 5]
# index      0  1  2  3  4  5

# СПИСКИ принимают три параметра: начало, конец и шаг.
# Записывается следующим образом: some_list[start:stop:step]
some_list[0:5:1]

# выведем на печать цифру 5. Это элемент списка с индексом 5
print(some_list[5]) # OUT: 5

# узнать длину списка можно, вызвав функцию len()
print(len(some_list)) # OUT: 6

# выведем на печать последний элемент списка (не важно какой у него порядковый номер)
# для этого применим отрицательный индекс списка -1
print(some_list[-1]) # OUT: 5

# СПИСКИ могут содержать числа,
some_list = [1, 2, 1, 3, 2, 5]
print(some_list) # OUT: [1, 2, 1, 3, 2, 5] 

# буквы (строки),
some_list = [1, 2, 1, 3, 2, 5, 'a']
print(some_list) # OUT: [1, 2, 1, 3, 2, 5, 'a']

# списки (вложенные сиски),
some_list = [1, 2, 1, 3, 2, 5, 'a', [1, 2, 3]]
print(some_list) # OUT: [1, 2, 1, 3, 2, 5, 'a', [1, 2, 3]]

# Последним элемент списка сейчас является вложенный список.
# выведем на печать последний элемент этого вложенного списка.
print(some_list[-1][-1]) # OUT: 3

# узнать длину списка вложенного списка с индексом 1 можно, вызвав функцию len().
some_list = [[1], [1, 2, 3, 4, 5], [2, 4]]
print(len(some_list[1])) # OUT: 5

# Поскольку СПИСКИ являются изменяемым типом данных, заменим индекс 1 списка и выведем на печать.
some_list = [[1], [1, 2, 3, 4, 5], [2, 4]]
print(some_list[1]) # OUT: [1, 2, 3, 4, 5]
# заменим его на такой же, но перевернутый список [5, 4, 3, 4, 1].
some_list[1] = some_list[1][::-1]
print(some_list[1]) # OUT: [5, 4, 3, 2, 1]

# Можно заменить индексы в списке друг на друга. Сделать 'swap'
some_list = [1, 2, 1, 3, 2, 5]
# index      0  1  2  3  4  5
print(some_list) # OUT: [1, 2, 1, 3, 2, 5]
some_list[2], some_list[3] = some_list[3], some_list[2]
print(some_list) # OUT: [1, 2, 3, 1, 2, 5]

# Можно добавлять элементы к списку. Добавим цифру 7 к списку.
some_list = [1, 2, 3]
print(some_list) # OUT: [1, 2, 3]
some_list = some_list + [7]
print(some_list) # OUT: [1, 2, 3, 7]

# СПИСКИ можно продублировать, применив умножение.
some_list = [1, 2, 3]
print(some_list) # OUT: [1, 2, 3]
some_list = some_list*2
print(some_list) # OUT: [1, 2, 3, 1, 2, 3]

# Можно СОЗДАВАТЬ СПИСКИ из строк. Сконвертировать строку в СПИСОК.
# Для этого используется функция list()
some_string = "string"
some_list = list(some_string)
print(some_list) # OUT: ['s','t','r','i','n','g']

# Можно СОЗДАВАТЬ СПИСКИ из последовательности чисел.
some_list = list(range(11))
print(some_list) # OUT: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

# СПИСКИ можно итерировать. Пробегаться по элементамсписка при помощи цикла.
some_list = [1, 2, 3, 4, 5]
# если необходимо создать список из последовательности чисел, то лучше использовать функцию range()
# запишем то же самое, но при помощи функции range()
some_list = list(range(1, 6))
print(some_list) # OUT: [1, 2, 3, 4, 5]

# вывести элементы списка в цикле
for i in some_list:
	print(i)

# Допустим, при итерации нам нужно пропустить цифру 3 из списка
for i in some_list:
	if i == 3:
		print("пропуск элемента списка")
		continue
	print(i)

# Допустим, при итерации нам нужно пропустить цифру 3 из списка и создать НОВЫЙ
# список без неё.
some_list = list(range(1, 6))
some_list2 = []
print(some_list) # OUT: [1, 2, 3, 4, 5]
print(some_list2) # OUT: []
for i in some_list:
    if i == 3:
        continue
    # склеиваем список some_list2 из элементов списка some_list
    some_list2 += [i]
# необязательный цикл, которым можно подвести итог итераций списка. Относится к циклу for
# если в цикле for встречается оператор break, необяательный цикл else не сработает.
else:
    print(some_list2) # OUT: [1, 2, 4, 5]

# Увеличим элементы списка на фиксированное значение a = 3.
some_list = [1, 2, 3, 4, 5]
a = 3

for i in range(len(some_list)):
    some_list[i] += a
print(some_list) # OUT: [4, 5, 6, 7, 8]
